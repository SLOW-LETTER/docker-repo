version: "3"

services:
  db:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    volumes:
      - postgresVolume:/data/db/postgres

  backend:
    restart: unless-stopped
    container_name: backend
    build:
      context: ./backend-repo
    ports:
      - 8080:8080
    volumes:
      - ./backend-repo/:/backend/
    environment: # springboot의 application-*.yml에 주입 필요한 정보
      # S3_ACCESSKEY: "${S3_ACCESSKEY}"
      # S3_SECRETKEY: "${S3_SECRETKEY}"
      # S3_REGION: "${S3_REGION}"
      # S3_BUCKET: "${S3_BUCKET}"
      DB_HOSTNAME: db
      DB_PORT: 5432
      DB_DBNAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 1234
    depends_on:
      - db

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.2.1
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - PROMETHEUS_COMMON_DISABLE_HTTP2
    depends_on:
      - backend

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    # user: "472"
    # environment:
    #   - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app,grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./datasource.yml/:/etc/grafana/provisioning/datasource.yml
    ports:
      - 3333:3333
    restart: always
    depends_on:
      - prometheus

  next:
    container_name: "next"
    restart: "on-failure"
    build:
      context: ./front-rep/slow-letter
      dockerfile: Dockerfile
    volumes:
      # hot reload를 위해 mount
      - "./front-rep/slow-letter:/usr/src/next"
      - "/usr/src/next/node_modules"
      - "/usr/src/next/.next" 
    ports:
      - "3000:3000"

volumes:
  postgresVolume:
  grafana_data: 
